{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Practica 2.5 - Proxy inverso y balanceo de carga con SSL en NGINX","text":"<p>Para comenzar las ip de mis m\u00e1quinas han sido:</p> <ul> <li>ip webserver1 192.168.129.195</li> <li>ip proxy 192.168.129.60</li> <li>ip webserver2 192.168.129.192</li> </ul>"},{"location":"#creacion-de-certificado-autofirmado","title":"Creaci\u00f3n de certificado autofirmado","text":"<p>Dado que nuestra web no est\u00e1 publicada en internet y los certificados son de pago vamos a emitir y firmar nosotros el certificado de nuestra web.</p> <p>Para comenzar debemos de crear la carpeta que va a contener los certificados que vamos a generar.</p> <p></p> <p>Ahora debemos de crear el certificado autofirmado y una clave privada para firmar el certificado. Para ello ejecutamos el siguiente comando:</p> <p></p> <p>En el comando podemos ver distintas partes:</p> <ul> <li>openssl: Es el comando que vamos a utilizar para generar el certificado.</li> <li>req: Indica que vamos a realizar una petici\u00f3n de certificado.</li> <li>-x509: Indica que vamos a crear un certificado autofirmado.</li> <li>-nodes: Indica que no vamos a cifrar la clave privada. De esta forma el servidor podr\u00e1 leer el contenido de la clave privada sin necesidad de introducir una contrase\u00f1a.</li> <li>-days 365: Indica que el certificado va a durar 365 d\u00edas.</li> <li>-newkey rsa:2048: Indica que vamos a generar una clave privada RSA de 2048 bits.</li> <li>-keyout:  indica donde vamos a guardar la clave privada.</li> <li>-out: indica donde vamos a guardar el certificado.</li> </ul> <p>Tendr\u00e9mos a su vez que rellenar los datos que nos pide el comando como puede verse en la imagen.</p>"},{"location":"#configuracion-ssl-en-el-proxy-inverso","title":"Configuraci\u00f3n SSL en el proxy inverso","text":"<p>Ahora debemos de configurar el proxy inverso para que pueda trabajar con SSL. Para ello debemos de modificar el archivo de configuraci\u00f3n de nginx que se encuentra en la ruta <code>/etc/nginx/sites-available/</code>.</p> <p>Para ello debemos de cambiar el puerto de escucha del servidor web a 443 y a\u00f1adir las rutas del certificado que hemos creado anteriormente, as\u00ed como la clave privada, el protocolo y los cifrados que vamos a aceptar. </p> <p>Una vez hecho el archivo de configuraci\u00f3n debe de quedar as\u00ed:</p> <p></p> <p>Ahora solo queda reiniciar el servicio de nginx para que los cambios surtan efecto, dado que el enlace simb\u00f3lico ya est\u00e1 creado.</p>"},{"location":"#comprobaciones","title":"Comprobaciones","text":"<p>Podemos ver que si nos conectamos por https nos saltar\u00e1 un error de certificado, esto es debido a que el certificado no es de confianza, ya que no est\u00e1 firmado por una entidad certificadora de confianza. </p> <p></p> <p>Si aceptamos el riesgo y continuamos podemos ver que la web se muestra correctamente. Ahora si inspeccionamos en la barra de navegaci\u00f3n podemos ver que la conexi\u00f3n es segura. Si clickamos en el candado podemos ver la informaci\u00f3n del certificado. </p> <p></p> <p>Ahora si le damos ver certificado podemos ver la informaci\u00f3n del certificado que hemos creado.</p> <p></p>"},{"location":"#redireccion-forzosa-a-https","title":"Redirecci\u00f3n forzosa a HTTPS","text":"<p>Para forzar la redirecci\u00f3n a HTTPS debemos de modificar el archivo de configuraci\u00f3n de nginx que se encuentra en la ruta <code>/etc/nginx/sites-available/</code> y a\u00f1adir un bloque de configuraci\u00f3n que redirija todas las peticiones que lleguen por el puerto 80 a la misma direcci\u00f3n pero por el puerto 443.</p> <p>El archivo de configuraci\u00f3n debe de quedar as\u00ed:</p> <p></p> <p>El apartado de access_log nos guardar\u00e1 informaci\u00f3n de las peticiones que lleguen por el puerto 80 y el return 301 mandar\u00e1 la cabecera de redirecci\u00f3n a la direcci\u00f3n que le indiquemos. </p> <p>Podemos ver aqu\u00ed los logs de acceso que se han generado:</p> <p></p> <p>y el de https:</p> <p></p>"},{"location":"#cuestiones-finales","title":"Cuestiones finales","text":""},{"location":"#cuestion-1","title":"Cuesti\u00f3n 1","text":"<p>Hemos configurado nuestro proxy inverso con todo lo que nos hace falta pero no nos funciona y da un error del tipo This site can't provide a secure connection, ERR_SSL_PROTOCOL_ERROR.</p> <p>Dentro de nuestro server block tenemos esto:</p> <pre><code>server {\n    listen 443;\n    ssl_certificate /etc/nginx/ssl/enrico-berlinguer/server.crt;\n    ssl_certificate_key /etc/nginx/ssl/enrico-berlinguer/server.key;\n    ssl_protocols TLSv1.3;\n    ssl_ciphers ECDH+AESGCM:DH+AESGCM:ECDH+AES256:DH+AES256:ECDH+AES128:DH+AES:ECDH+3DES:DH+3DES:RSA+AESGCM:RSA+AES:RSA+3DES:!aNULL:!MD5:!DSS;\n    server_name enrico-berlinguer;\n    access_log /var/log/nginx/https_access.log;\n\n    location / {\n        proxy_pass http://red-party;\n        }\n    }\n\n</code></pre>"},{"location":"#respuesta","title":"Respuesta","text":"<p>Falta el ssl en listen 443, de manera que no especifica que es una conexi\u00f3n segura. </p>"},{"location":"#cuestion-2","title":"Cuesti\u00f3n 2","text":"<p>Imaginad que intentamos acceder a nuestro sitio web HTTPS y nos encontramos con el siguiente error:</p> <p></p> <p>Investigad qu\u00e9 est\u00e1 pasando y como se ha de solucionar.</p>"},{"location":"#respuesta_1","title":"Respuesta","text":"<p>EL error se debe a que el certificado creado no est\u00e1 firmado por una entidad de confianza, por lo que el navegador no lo reconoce como seguro. </p> <p>Para solucionar este problema debemos de comprar un certificado a una entidad certificadora de confianza o a\u00f1adir una excepci\u00f3n en el navegador para que conf\u00ede en nuestro certificado.</p>"}]}